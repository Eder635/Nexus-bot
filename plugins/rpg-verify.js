import { createHash } from 'crypto'
let Reg = /\|?(.*)([.|] *?)([0-9]*)$/i
let handler = async function (m, { conn, text, usedPrefix, command }) {
  let user = global.db.data.users[m.sender]
  let name2 = conn.getName(m.sender)
  if (user.registered === true) throw `„Äåüëë„Äç*Ya* *estas* *registrado*\n\n‚óâ ¬øQuiere volver a registrarse?\n\n‚óâ Para volver a registrarse *elimine su registro* haciendo uso del comando\n*${usedPrefix}unreg*`
  if (!Reg.test(text)) throw `„Äåüëë„Äç*Formato incorrecto*\n\n*${usedPrefix + command} nombre.edad*\n\n [ üí° ] Ejemplo : *${usedPrefix + command}* ${name2}.18`
  let [_, name, splitter, age] = text.match(Reg)
  if (!name) throw '„Äåüëë„Äç*El nombre no puede estar vacio*'
  if (!age) throw '„Äåüëë„Äç *La edad no puede estar vac√≠a*'
  if (name.length >= 30) throw '*„Äåüëë„Äç*El nombre es demasiado largo*' 
  age = parseInt(age)
  if (age > 100) throw '*Pell√© quiere jugar con el bot?*'
  if (age < 5) throw '*Eres menor no  puedes registrarte en BaileyBot-MD*'
  user.name = name.trim()
  user.age = age
  user.regTime = + new Date
  user.registered = true
  global.db.data.users[m.sender].money += 600
  global.db.data.users[m.sender].limit += 20
  global.db.data.users[m.sender].exp += 500
  global.db.data.users[m.sender].joincount += 100
 let sn = createHash('md5').update(m.sender).digest('hex').slice(0, 6)    
m.react('üì©') 
let regbot = `üë§ ùó• ùóò ùóö ùóú ùó¶ ùóß ùó• ùó¢ üë§
‚Ä¢‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚Ä¢
„Äéüí≠„Äèùó°ùóºùó∫ùóØùóøùó≤: ${name}
„Äé‚ú®Ô∏è„Äèùóòùó±ùóÆùó±: ${age} a√±os
‚Ä¢‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚Ä¢
„ÄéüéÅ„Äèùó•ùó≤ùó∞ùóºùó∫ùóΩùó≤ùóªùòÄùóÆùòÄ:
‚Ä¢ 10 Estrellas üåü
‚Ä¢ 5 Coins ü™ô
‚Ä¢ 245 Experiencia üí∏
‚Ä¢ 12 Tokens üí∞
‚Ä¢‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚Ä¢
`
conn.sendMessage(m.chat, {
text: regbot,
contextInfo: {
externalAdReply: {
title: '‡º∫„Äé‚úÖùÜº ùó•ùóòùóöùóúùó¶ùóßùó•ùóîùóóùó¢ ùÜª‚úÖ„Äè‚Äã‡ºª',
body: wm, 
thumbnaiUrl: md, 
sourceUrl: channel,
mediaType: 1,
showAdAttribution: true,
renderLargerThumbnail: true,
}}}, { quoted: fkontak })
//await m.reply(`${sn}`)        
}
handler.help = ['reg']
handler.tags = ['rg']
handler.command = ['verify', 'verificar', 'reg', 'register', 'registrar'] 

export default handler